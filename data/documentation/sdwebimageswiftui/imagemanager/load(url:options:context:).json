{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.dreampiggy.SDWebImageSwiftUI\/documentation\/SDWebImageSwiftUI","doc:\/\/com.dreampiggy.SDWebImageSwiftUI\/documentation\/SDWebImageSwiftUI\/ImageManager"]]},"sections":[],"abstract":[{"text":"Start to load the url operation","type":"text"}],"variants":[{"paths":["\/documentation\/sdwebimageswiftui\/imagemanager\/load(url:options:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"SDWebImageSwiftUI"}],"role":"symbol","externalID":"s:17SDWebImageSwiftUI0B7ManagerC4load3url7options7contexty10Foundation3URLVSg_So0aB7OptionsVSDySo0aB13ContextOptionaypGSgtF","title":"load(url:options:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"url"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@E@SDWebImageOptions","text":"SDWebImageOptions","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"c:SDWebImageDefine.h@T@SDWebImageContextOption","text":"SDWebImageContextOption"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"]?)","kind":"text"}],"roleHeading":"Instance Method","platforms":[{"unavailable":false,"beta":false,"name":"iOS","deprecated":false,"introducedAt":"14.0"},{"unavailable":false,"beta":false,"deprecated":false,"name":"iPadOS","introducedAt":"14.0"},{"deprecated":false,"introducedAt":"14.0","unavailable":false,"name":"Mac Catalyst","beta":false},{"unavailable":false,"name":"macOS","introducedAt":"11.0","beta":false,"deprecated":false},{"introducedAt":"14.0","deprecated":false,"unavailable":false,"beta":false,"name":"tvOS"},{"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"7.0","unavailable":false}],"symbolKind":"method"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"text":"(","kind":"text"},{"text":"url","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SDWebImageOptions","preciseIdentifier":"c:@E@SDWebImageOptions"},{"text":" = [], ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"c:SDWebImageDefine.h@T@SDWebImageContextOption","kind":"typeIdentifier","text":"SDWebImageContextOption"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]? = nil)","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The image url"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The options to use when downloading the image. See "},{"type":"codeVoice","code":"SDWebImageOptions"},{"text":" for the possible values.","type":"text"}]}],"name":"options"},{"name":"context","content":[{"inlineContent":[{"text":"A context contains different options to perform specify changes or processes, see ","type":"text"},{"code":"SDWebImageContextOption","type":"codeVoice"},{"type":"text","text":". This hold the extra objects which "},{"code":"options","type":"codeVoice"},{"text":" enum can not hold.","type":"text"}],"type":"paragraph"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.dreampiggy.SDWebImageSwiftUI\/documentation\/SDWebImageSwiftUI\/ImageManager\/load(url:options:context:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.dreampiggy.SDWebImageSwiftUI/documentation/SDWebImageSwiftUI":{"identifier":"doc:\/\/com.dreampiggy.SDWebImageSwiftUI\/documentation\/SDWebImageSwiftUI","kind":"symbol","url":"\/documentation\/sdwebimageswiftui","abstract":[],"title":"SDWebImageSwiftUI","type":"topic","role":"collection"},"doc://com.dreampiggy.SDWebImageSwiftUI/documentation/SDWebImageSwiftUI/ImageManager/load(url:options:context:)":{"abstract":[{"type":"text","text":"Start to load the url operation"}],"title":"load(url:options:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"kind":"text","text":"("},{"text":"url","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@SDWebImageOptions","text":"SDWebImageOptions"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": ["},{"text":"SDWebImageContextOption","preciseIdentifier":"c:SDWebImageDefine.h@T@SDWebImageContextOption","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"]?)"}],"url":"\/documentation\/sdwebimageswiftui\/imagemanager\/load(url:options:context:)","kind":"symbol","identifier":"doc:\/\/com.dreampiggy.SDWebImageSwiftUI\/documentation\/SDWebImageSwiftUI\/ImageManager\/load(url:options:context:)","role":"symbol","type":"topic"},"doc://com.dreampiggy.SDWebImageSwiftUI/documentation/SDWebImageSwiftUI/ImageManager":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImageManager"}],"kind":"symbol","title":"ImageManager","type":"topic","abstract":[{"type":"text","text":"A Image observable object for handle image load process. This drive the Source of Truth for image loading status."},{"type":"text","text":" "},{"type":"text","text":"You can use "},{"type":"codeVoice","code":"@ObservedObject"},{"text":" to associate each instance of manager to your View type, which update your viewâ€™s body from SwiftUI framework when image was loaded.","type":"text"}],"url":"\/documentation\/sdwebimageswiftui\/imagemanager","navigatorTitle":[{"text":"ImageManager","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.dreampiggy.SDWebImageSwiftUI\/documentation\/SDWebImageSwiftUI\/ImageManager"}}}