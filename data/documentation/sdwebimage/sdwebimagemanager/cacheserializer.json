{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheSerializer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageCacheSerializerProtocol","preciseIdentifier":"c:objc(pl)SDWebImageCacheSerializer","text":"SDWebImageCacheSerializerProtocol"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SDWebImageManager.sharedManager.cacheSerializer = [SDWebImageCacheSerializer cacheSerializerWithBlock:^NSData * _Nullable(UIImage * _Nonnull image, NSData * _Nullable data, NSURL * _Nullable imageURL) {"},{"type":"text","text":" "},{"type":"text","text":"SDImageFormat format = [NSData sd_imageFormatForImageData:data];"},{"type":"text","text":" "},{"type":"text","text":"switch (format) {"},{"type":"text","text":" "},{"type":"text","text":"case SDImageFormatWebP:"},{"type":"text","text":" "},{"type":"text","text":"return image.images ? data : nil;"},{"type":"text","text":" "},{"type":"text","text":"default:"},{"type":"text","text":" "},{"type":"text","text":"return data;"},{"type":"text","text":" "},{"type":"text","text":"}"},{"type":"text","text":" "},{"type":"text","text":"}];"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default value is nil. Means we just store the source downloaded data to disk cache."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sdwebimage\/sdwebimagemanager\/cacheserializer"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/sdwebimage\/sdwebimagemanager\/cacheserializer"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageManager\/cacheSerializer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The cache serializer is used to convert the decoded image, the source downloaded data, to the actual data used for storing to the disk cache. If you return nil, means to generate the data from the image instance, see "},{"type":"codeVoice","code":"SDImageCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For example, if you are using WebP images and facing the slow decoding time issue when later retrieving from disk cache again. You can try to encode the decoded image to JPEG\/PNG format to disk cache instead of source downloaded data."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheSerializer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SDWebImageCacheSerializerProtocol","preciseIdentifier":"c:objc(pl)SDWebImageCacheSerializer"},{"kind":"text","text":"?"}],"title":"cacheSerializer","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"c:objc(cs)SDWebImageManager(py)cacheSerializer","modules":[{"name":"SDWebImage"}],"navigatorTitle":[{"kind":"identifier","text":"cacheSerializer"}]},"hierarchy":{"paths":[["doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage","doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageManager"]]},"references":{"doc://com.dailymotion.SDWebImage/documentation/SDWebImage/SDWebImageManager/cacheSerializer":{"role":"symbol","title":"cacheSerializer","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheSerializer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SDWebImageCacheSerializerProtocol","preciseIdentifier":"c:objc(pl)SDWebImageCacheSerializer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The cache serializer is used to convert the decoded image, the source downloaded data, to the actual data used for storing to the disk cache. If you return nil, means to generate the data from the image instance, see "},{"type":"codeVoice","code":"SDImageCache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For example, if you are using WebP images and facing the slow decoding time issue when later retrieving from disk cache again. You can try to encode the decoded image to JPEG\/PNG format to disk cache instead of source downloaded data."}],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageManager\/cacheSerializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"cacheSerializer"}],"url":"\/documentation\/sdwebimage\/sdwebimagemanager\/cacheserializer"},"doc://com.dailymotion.SDWebImage/documentation/SDWebImage/SDWebImageManager":{"role":"symbol","title":"SDWebImageManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SDWebImageManager"}],"abstract":[{"type":"text","text":"The SDWebImageManager is the class behind the UIImageView+WebCache category and likes."},{"type":"text","text":" "},{"type":"text","text":"It ties the asynchronous downloader (SDWebImageDownloader) with the image cache store (SDImageCache)."},{"type":"text","text":" "},{"type":"text","text":"You can use this class directly to benefit from web image downloading with caching in another context than"},{"type":"text","text":" "},{"type":"text","text":"a UIView."}],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SDWebImageManager"}],"url":"\/documentation\/sdwebimage\/sdwebimagemanager"},"doc://com.dailymotion.SDWebImage/documentation/SDWebImage":{"role":"collection","title":"SDWebImage","abstract":[],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage","kind":"symbol","type":"topic","url":"\/documentation\/sdwebimage"},"doc://com.dailymotion.SDWebImage/documentation/SDWebImage/SDWebImageCacheSerializerProtocol":{"role":"symbol","title":"SDWebImageCacheSerializerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SDWebImageCacheSerializerProtocol"}],"abstract":[{"type":"text","text":"This is the protocol for cache serializer."},{"type":"text","text":" "},{"type":"text","text":"We can use a block to specify the cache serializer. But Using protocol can make this extensible, and allow Swift user to use it easily instead of using "},{"type":"codeVoice","code":"@convention(block)"},{"type":"text","text":" to store a block into context options."}],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageCacheSerializerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SDWebImageCacheSerializerProtocol"}],"url":"\/documentation\/sdwebimage\/sdwebimagecacheserializerprotocol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Property"},{"op":"replace","path":"\/metadata\/title","value":"cacheSerializer"},{"op":"replace","path":"\/metadata\/symbolKind","value":"property"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"identifier","text":"cacheSerializer"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":", "},{"kind":"keyword","text":"strong"},{"kind":"text","text":", "},{"kind":"keyword","text":"readwrite"},{"kind":"text","text":", "},{"kind":"keyword","text":"nullable"},{"kind":"text","text":") "},{"kind":"typeIdentifier","text":"id<SDWebImageCacheSerializer>","preciseIdentifier":"c:Qoobjc(pl)SDWebImageCacheSerializer"},{"kind":"text","text":" * "},{"kind":"identifier","text":"cacheSerializer"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageManager~1cacheSerializer\/title","value":"cacheSerializer"},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageManager~1cacheSerializer\/fragments","value":[{"kind":"identifier","text":"cacheSerializer"}]},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageManager\/title","value":"SDWebImageManager"},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageManager\/fragments","value":[{"kind":"identifier","text":"SDWebImageManager"}]},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageCacheSerializerProtocol\/title","value":"SDWebImageCacheSerializer"},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageCacheSerializerProtocol\/fragments","value":[{"kind":"identifier","text":"SDWebImageCacheSerializer"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}