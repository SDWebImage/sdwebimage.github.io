{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decryptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageDownloaderDecryptorProtocol","preciseIdentifier":"c:objc(pl)SDWebImageDownloaderDecryptor","text":"SDWebImageDownloaderDecryptorProtocol"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sdwebimage\/sdwebimagedownloader\/decryptor"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/sdwebimage\/sdwebimagedownloader\/decryptor"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageDownloader\/decryptor","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Set the decryptor to decrypt the original download data before image decoding. This can be used for encrypted image data, like Base64."},{"type":"text","text":" "},{"type":"text","text":"This decryptor method will be called for each downloading image data. Return the original data means no modification. Return nil will mark this download failed."},{"type":"text","text":" "},{"type":"text","text":"Defaults to nil, means does not modify the original download data."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decryptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SDWebImageDownloaderDecryptorProtocol","preciseIdentifier":"c:objc(pl)SDWebImageDownloaderDecryptor"},{"kind":"text","text":"?"}],"title":"decryptor","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"c:objc(cs)SDWebImageDownloader(py)decryptor","modules":[{"name":"SDWebImage"}],"navigatorTitle":[{"kind":"identifier","text":"decryptor"}]},"hierarchy":{"paths":[["doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage","doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageDownloader"]]},"references":{"doc://com.dailymotion.SDWebImage/documentation/SDWebImage":{"role":"collection","title":"SDWebImage","abstract":[],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage","kind":"symbol","type":"topic","url":"\/documentation\/sdwebimage"},"doc://com.dailymotion.SDWebImage/documentation/SDWebImage/SDWebImageDownloader/decryptor":{"role":"symbol","title":"decryptor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decryptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SDWebImageDownloaderDecryptorProtocol","preciseIdentifier":"c:objc(pl)SDWebImageDownloaderDecryptor"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Set the decryptor to decrypt the original download data before image decoding. This can be used for encrypted image data, like Base64."},{"type":"text","text":" "},{"type":"text","text":"This decryptor method will be called for each downloading image data. Return the original data means no modification. Return nil will mark this download failed."},{"type":"text","text":" "},{"type":"text","text":"Defaults to nil, means does not modify the original download data."}],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageDownloader\/decryptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"decryptor"}],"url":"\/documentation\/sdwebimage\/sdwebimagedownloader\/decryptor"},"doc://com.dailymotion.SDWebImage/documentation/SDWebImage/SDWebImageDownloader":{"role":"symbol","title":"SDWebImageDownloader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SDWebImageDownloader"}],"abstract":[{"type":"text","text":"Asynchronous downloader dedicated and optimized for image loading."}],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageDownloader","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SDWebImageDownloader"}],"url":"\/documentation\/sdwebimage\/sdwebimagedownloader"},"doc://com.dailymotion.SDWebImage/documentation/SDWebImage/SDWebImageDownloaderDecryptorProtocol":{"role":"symbol","title":"SDWebImageDownloaderDecryptorProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SDWebImageDownloaderDecryptorProtocol"}],"abstract":[{"type":"text","text":"This is the protocol for downloader decryptor. Which decrypt the original encrypted data before decoding. Note progressive decoding is not compatible for decryptor."},{"type":"text","text":" "},{"type":"text","text":"We can use a block to specify the downloader decryptor. But Using protocol can make this extensible, and allow Swift user to use it easily instead of using "},{"type":"codeVoice","code":"@convention(block)"},{"type":"text","text":" to store a block into context options."}],"identifier":"doc:\/\/com.dailymotion.SDWebImage\/documentation\/SDWebImage\/SDWebImageDownloaderDecryptorProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SDWebImageDownloaderDecryptorProtocol"}],"url":"\/documentation\/sdwebimage\/sdwebimagedownloaderdecryptorprotocol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Property"},{"op":"replace","path":"\/metadata\/title","value":"decryptor"},{"op":"replace","path":"\/metadata\/symbolKind","value":"property"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"identifier","text":"decryptor"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":", "},{"kind":"keyword","text":"strong"},{"kind":"text","text":", "},{"kind":"keyword","text":"readwrite"},{"kind":"text","text":", "},{"kind":"keyword","text":"nullable"},{"kind":"text","text":") "},{"kind":"typeIdentifier","text":"id<SDWebImageDownloaderDecryptor>","preciseIdentifier":"c:Qoobjc(pl)SDWebImageDownloaderDecryptor"},{"kind":"text","text":" * "},{"kind":"identifier","text":"decryptor"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageDownloader~1decryptor\/title","value":"decryptor"},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageDownloader~1decryptor\/fragments","value":[{"kind":"identifier","text":"decryptor"}]},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageDownloader\/title","value":"SDWebImageDownloader"},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageDownloader\/fragments","value":[{"kind":"identifier","text":"SDWebImageDownloader"}]},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageDownloaderDecryptorProtocol\/title","value":"SDWebImageDownloaderDecryptor"},{"op":"replace","path":"\/references\/doc:~1~1com.dailymotion.SDWebImage~1documentation~1SDWebImage~1SDWebImageDownloaderDecryptorProtocol\/fragments","value":[{"kind":"identifier","text":"SDWebImageDownloaderDecryptor"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}